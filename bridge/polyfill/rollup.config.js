const resolve = require('rollup-plugin-node-resolve');
const typescript = require('@rollup/plugin-typescript');
const replace = require('rollup-plugin-replace');
const bundleSize = require('rollup-plugin-bundle-size');
const { terser } = require('rollup-plugin-terser');

const NODE_ENV = process.env['NODE_ENV'] || 'development';
const output = {
  format: 'iife',
  sourcemap: NODE_ENV === 'development',
  // This will minify the wrapper code generated by rollup.
  compact: false,
  freeze: false,
  strict: false,
};
const uglifyOptions = {
  compress: {
    loops: false,
    keep_fargs: false,
    unsafe: true,
    pure_getters: true
  },
};
const plugins = [
  resolve(),
  typescript(),
  replace({
    'process.env.NODE_ENV': JSON.stringify(NODE_ENV),
  }),
  NODE_ENV === 'development' ? null : terser(uglifyOptions),
  bundleSize(),
];

module.exports = [
  {
    input: 'src/index.ts',
    output: Object.assign({ file: 'dist/main.js' }, output),
    plugins,
  },
  {
    input: 'src/test/index.js',
    output: Object.assign({ file: 'dist/test.js' }, output),
    plugins,
  }
];
